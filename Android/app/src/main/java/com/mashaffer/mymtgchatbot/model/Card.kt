package com.mashaffer.mymtgchatbot.model

import com.google.gson.annotations.SerializedName

// Data class for response from scryfall
data class Card(
    @SerializedName("object") val `object`: String,
    @SerializedName("id") val id: String,
    @SerializedName("oracle_id") val oracleId: String,
    @SerializedName("multiverse_ids") val multiverseIds: List<Int>,
    @SerializedName("mtgo_id") val mtgoId: Int?,
    @SerializedName("tcgplayer_id") val tcgplayerId: Int?,
    @SerializedName("cardmarket_id") val cardmarketId: Int?,
    @SerializedName("name") val name: String,
    @SerializedName("lang") val lang: String,
    @SerializedName("released_at") val releasedAt: String,
    @SerializedName("uri") val uri: String,
    @SerializedName("scryfall_uri") val scryfallUri: String,
    @SerializedName("layout") val layout: String,
    @SerializedName("highres_image") val highresImage: Boolean,
    @SerializedName("image_status") val imageStatus: String,
    @SerializedName("image_uris") val imageUris: Map<String, String>,
    @SerializedName("mana_cost") val manaCost: String,
    @SerializedName("cmc") val cmc: Double,
    @SerializedName("type_line") val typeLine: String,
    @SerializedName("oracle_text") val oracleText: String,
    @SerializedName("power") val power: String,
    @SerializedName("toughness") val toughness: String,
    @SerializedName("colors") val colors: List<String>,
    @SerializedName("color_identity") val colorIdentity: List<String>,
    @SerializedName("keywords") val keywords: List<String>,
    @SerializedName("legalities") val legalities: Map<String, String>,
    @SerializedName("games") val games: List<String>,
    @SerializedName("reserved") val reserved: Boolean,
    @SerializedName("game_changer") val gameChanger: Boolean,
    @SerializedName("foil") val foil: Boolean,
    @SerializedName("nonfoil") val nonfoil: Boolean,
    @SerializedName("finishes") val finishes: List<String>,
    @SerializedName("oversized") val oversized: Boolean,
    @SerializedName("promo") val promo: Boolean,
    @SerializedName("reprint") val reprint: Boolean,
    @SerializedName("variation") val variation: Boolean,
    @SerializedName("set_id") val setId: String,
    @SerializedName("set") val set: String,
    @SerializedName("set_name") val setName: String,
    @SerializedName("set_type") val setType: String,
    @SerializedName("set_uri") val setUri: String,
    @SerializedName("scryfall_set_uri") val scryfallSetUri: String,
    @SerializedName("rulings_uri") val rulingsUri: String,
    @SerializedName("prints_search_uri") val printsSearchUri: String,
    @SerializedName("collector_number") val collectorNumber: String,
    @SerializedName("digital") val digital: Boolean,
    @SerializedName("rarity") val rarity: String,
    @SerializedName("card_back_id") val cardBackId: String,
    @SerializedName("artist") val artist: String,
    @SerializedName("artist_ids") val artistIds: List<String>,
    @SerializedName("illustration_id") val illustrationId: String,
    @SerializedName("border_color") val borderColor: String,
    @SerializedName("frame") val frame: String,
    @SerializedName("frame_effects") val frameEffects: List<String>,
    @SerializedName("security_stamp") val securityStamp: String,
    @SerializedName("full_art") val fullArt: Boolean,
    @SerializedName("textless") val textless: Boolean,
    @SerializedName("booster") val booster: Boolean,
    @SerializedName("story_spotlight") val storySpotlight: Boolean,
    @SerializedName("edhrec_rank") val edhrecRank: Int?,
    @SerializedName("preview") val preview: Preview?,
    @SerializedName("prices") val prices: Map<String, Double>,
    @SerializedName("related_uris") val relatedUris: Map<String, String>,
    @SerializedName("purchase_uris") val purchaseUris: Map<String, String>
) {
    data class Preview(
        @SerializedName("source") val source: String,
        @SerializedName("source_uri") val sourceUri: String,
        @SerializedName("previewed_at") val previewedAt: String
    )
}